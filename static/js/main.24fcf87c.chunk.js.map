{"version":3,"sources":["App.js","index.js"],"names":["questions","questionText","answerOptions","answerCorrect","questionList","i","length","j","Math","floor","random","temp","shuffleQuestions","console","log","App","props","useState","questionNumber","setQuestionNumber","score","setScore","windowOpen","setWindowOpen","endWindow","setEndWindow","answerButton","answer","className","id","onClick","times","map","answerOption","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAKMA,G,MAAY,CAChB,CACEC,aAAc,2BACdC,cAAe,CAAE,MAAO,SAAU,SAAU,YAC5CC,cAAe,OAEjB,CACEF,aAAc,+DACdC,cAAe,CAAE,WAAY,MAAO,OAAQ,SAC5CC,cAAe,SAEjB,CACEF,aAAc,iGACdC,cAAe,CAAE,SAAU,SAAU,SAAU,cAC/CC,cAAe,UAEjB,CACEF,aAAc,wDACdC,cAAe,CAAE,WAAY,OAAQ,SAAU,UAC/CC,cAAe,YAEjB,CACEF,aAAc,2CACdC,cAAe,CAAE,MAAO,cAAe,cAAe,kBACtDC,cAAe,eAEjB,CACEF,aAAc,oDACdC,cAAe,CAAE,KAAM,KAAM,KAAM,MACnCC,cAAe,MAEjB,CACEF,aAAc,gEACdC,cAAe,CAAE,WAAY,SAAU,OAAQ,SAC/CC,cAAe,YAEjB,CACEF,aAAc,iDACdC,cAAe,CAAE,WAAY,SAAU,WAAY,WACnDC,cAAe,WAEjB,CACEF,aAAc,+CACdC,cAAe,CAAE,OAAQ,SAAU,UAAW,cAC9CC,cAAe,cAEjB,CACEF,aAAc,6CACdC,cAAe,CAAE,UAAW,YAAa,YAAa,iBACtDC,cAAe,gBAInB,SAA0BC,GACxB,IAAI,IAAIC,EAAKD,EAAaE,OAAS,EAAID,EAAI,EAAGA,IAAI,CAChD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOP,EAAaC,GAC1BD,EAAaC,GAAKD,EAAaG,GAC/BH,EAAaG,GAAKI,GAItBC,CAAiBZ,GACjBa,QAAQC,IAAId,GAgEGe,MA5Df,SAAaC,GAAQ,IAAD,EAC0BC,mBAAS,GADnC,mBACXC,EADW,KACKC,EADL,OAEQF,mBAAS,GAFjB,mBAEXG,EAFW,KAEJC,EAFI,OAGkBJ,oBAAS,GAH3B,mBAGXK,EAHW,KAGCC,EAHD,OAIgBN,oBAAS,GAJzB,mBAIXO,EAJW,KAIAC,EAJA,KAcZC,EAAe,SAACC,GACpBJ,GAAeD,GACXK,IAAW3B,EAAUkB,GAAgBf,eACvCkB,EAASD,EAAQ,IAYrB,OAEE,yBAAKQ,UAAU,gBACb,yBAAKA,UAAU,aACb,0CAAgBV,EAAiB,GACjC,wCAAcE,IAEhB,yBAAKQ,UAAU,kBACZ5B,EAAUkB,GAAgBjB,aAC3B,yBAAK2B,WAAyB,IAAdJ,EAAqB,kBAAoB,cACvD,0BAAMI,UAAU,gBAAhB,wBACA,4BAAwCC,GAAG,aAAaC,QAAS,kBAlBvEX,EAAkB,GAClBE,EAAS,GACTE,GAAc,QACdE,GAAa,KAeP,QAGF,yBAAKG,WAA0B,IAAfN,EAAsB,YAAc,cAClD,0BAAMM,UAAU,gBAAgB5B,EAAUkB,GAAgBf,eAC1D,4BAAwC2B,QAAS,kBAtCnDZ,GAAkBF,EAAMe,OAC1BN,GAAcD,GAEhBE,SACAP,EAAkBD,EAAiB,KAkC7B,UAIJ,yBAAKU,UAAU,WACZ5B,EAAUkB,GAAgBhB,cAAc8B,KAAI,SAACC,GAAD,OAC7C,4BAAQC,SAAUZ,GAAcE,EAAWI,UAAU,eAAeE,QAAS,kBAAMJ,EAAaO,KAC7FA,SCvHXE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,0BAAMT,UAAU,aACf,kBAAC,EAAD,CAAKG,MAAM,QAGdO,SAASC,eAAe,W","file":"static/js/main.24fcf87c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\n\nconst questions = [\n  {\n    questionText: \"Which of these is water?\",\n    answerOptions: [ \"H2O\", \"C4H8O4\", \"C8H7Br\", \"C8H8HgO2\"],\n    answerCorrect: \"H2O\"\n  },\n  {\n    questionText: \"The Moon's name is derived from the Latin word meaning what?\",\n    answerOptions: [ \"Calendar\", \"Day\", \"Year\", \"Month\"],\n    answerCorrect: \"Month\"\n  },\n  {\n    questionText: \"What was the first NASA program to land an object on Mars that sent information back to Earth?\",\n    answerOptions: [ \"Viking\", \"Ithaki\", \"Apollo\", \"Clementine\"],\n    answerCorrect: \"Viking\"\n  },\n  {\n    questionText: \"What children's toy started out as wallpaper cleaner?\",\n    answerOptions: [ \"Play-doh\", \"Lego\", \"Hasbro\", \"Panini\"],\n    answerCorrect: \"Play-doh\"\n  },\n  {\n    questionText: \"The fear of punishment is known as what?\",\n    answerOptions: [ \"Awe\", \"Poinephobia\", \"Trypophobia\", \"Alektorophobia\"],\n    answerCorrect: \"Poinephobia\"\n  },\n  {\n    questionText: \"How is the number 20 written with Roman numerals?\",\n    answerOptions: [ \"XX\", \"XV\", \"VV\", \"VX\"],\n    answerCorrect: \"XX\"\n  },\n  {\n    questionText: \"What is an organism called that lives on or in a host animal?\",\n    answerOptions: [ \"Parasite\", \"Insect\", \"Bird\", \"Virus\"],\n    answerCorrect: \"Parasite\"\n  },\n  {\n    questionText: \"What is the process of splitting atoms called?\",\n    answerOptions: [ \"Big Bang\", \"Fusion\", \"Splatter\", \"Fission\"],\n    answerCorrect: \"Fission\"\n  },\n  {\n    questionText: \"The Portuguese man-of-war is a type of what?\",\n    answerOptions: [ \"Bird\", \"Turtle\", \"Panther\", \"Jelly-Fish\"],\n    answerCorrect: \"Jelly-Fish\"\n  },\n  {\n    questionText: \"Our galaxy is commonly known by what name?\",\n    answerOptions: [ \"Malin-1\", \"Andromeda\", \"Milky-Way\", \"Tadpol-Galaxy\"],\n    answerCorrect: \"Milky-Way\"\n  }\n]\n\nfunction shuffleQuestions(questionList){\n  for(let i = (questionList.length - 1); i > 0; i--){\n    const j = Math.floor(Math.random() * i);\n    const temp = questionList[i];\n    questionList[i] = questionList[j];\n    questionList[j] = temp;\n  }\n}\n\nshuffleQuestions(questions);\nconsole.log(questions);\n\n\n\nfunction App(props) {\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [score, setScore] = useState(0);\n  const [windowOpen, setWindowOpen] = useState(false);\n  const [endWindow, setEndWindow] = useState(false);\n\n  const nextButton = () => {\n    if (questionNumber >= props.times) {\n      setEndWindow(!endWindow);\n    }\n    answerButton();\n    setQuestionNumber(questionNumber + 1);\n  }\n\n  const answerButton = (answer) => {\n    setWindowOpen(!windowOpen);\n    if (answer === questions[questionNumber].answerCorrect){\n      setScore(score + 1);\n    }\n  }\n\n  const reset = () => {\n    setQuestionNumber(0);\n    setScore(0);\n    setWindowOpen(false);\n    setEndWindow(false);\n\n  }\n\n  return(\n\n    <div className=\"questionaire\">\n      <div className=\"questions\">\n        <span>Question {questionNumber + 1}</span>\n        <span>Score: {score}</span>\n      </div>\n      <div className=\"questions-text\">\n        {questions[questionNumber].questionText}\n        <div className={endWindow === true ? \"window-ON again\" : \"window-OFF\"}>\n          <span className=\"right-answer\"> Wanna play Again???</span>\n          <button /* className=\"next-question\"  */id=\"play-again\" onClick={() => reset()}>Yes</button>\n          {/* <button className=\"next-question\" onClick={() => setEndWindow(false)}>No</button> */}\n        </div>\n        <div className={windowOpen === true ? \"window-ON\" : \"window-OFF\"}>\n          <span className=\"right-answer\">{questions[questionNumber].answerCorrect}</span>\n          <button /* className=\"next-question\" */ onClick={() => nextButton()}>Next</button>\n        </div>\n          \n      </div>\n      <div className=\"answers\">\n        {questions[questionNumber].answerOptions.map((answerOption) => \n        <button disabled={windowOpen || endWindow} className=\"answerButton\" onClick={() => answerButton(answerOption)}>\n          {answerOption}\n        </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <body className=\"main-body\">\n     <App times=\"5\" />\n    </body>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}